"name": "besmi-mobile-app",
  "version": "1.0.0",
  "description": "Besmi - The only system built for lash artists of any level",
  "main": "index.js",
  "scripts": {
    "build": "echo 'Build complete'",
    "start": "echo 'Starting app'"
  },
  "dependencies": {
    "@capacitor/android": "^6.1.0",
    "@capacitor/camera": "^6.0.0",
    "@capacitor/cli": "^6.1.0",
    "@capacitor/core": "^6.1.0",
    "@capacitor/haptics": "^6.0.0",
    "@capacitor/keyboard": "^6.0.0",
    "@capacitor/push-notifications": "^6.0.0",
    "@capacitor/share": "^6.0.0",
    "@capacitor/splash-screen": "^6.0.0",
    "@capacitor/status-bar": "^6.0.0"
  },
  "devDependencies": {
    "typescript": "^5.0.0"
  },
  "keywords": ["mobile", "lash", "booking", "beauty", "capacitor"],
  "author": "Besmi",
  "license": "MIT"
}
```

### 2. index.html (Root Level)

```html
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Besmi - Lash Artist Platform</title>
  <style>
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }
    
    body {
      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
      background: linear-gradient(135deg, #000000 0%, #1a1a1a 100%);
      color: white;
      overflow: hidden;
    }
    
    .loading-container {
      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: center;
      height: 100vh;
      text-align: center;
      animation: fadeIn 1s ease-in;
    }
    
    .logo {
      width: 120px;
      height: 120px;
      border-radius: 30px;
      background: white;
      display: flex;
      align-items: center;
      justify-content: center;
      margin-bottom: 40px;
      box-shadow: 0 20px 40px rgba(0,0,0,0.3);
      animation: logoScale 2s ease-in-out infinite alternate;
    }
    
    .logo-text {
      font-size: 60px;
      font-weight: bold;
      color: black;
      font-family: serif;
    }
    
    .brand-name {
      font-size: 32px;
      font-weight: 600;
      margin-bottom: 16px;
      letter-spacing: 2px;
    }
    
    .tagline {
      font-size: 18px;
      opacity: 0.8;
      max-width: 320px;
      line-height: 1.4;
      margin-bottom: 60px;
      text-align: center;
    }
    
    .loading-dots {
      display: flex;
      gap: 8px;
    }
    
    .dot {
      width: 12px;
      height: 12px;
      border-radius: 50%;
      background: white;
      animation: dotPulse 1.5s ease-in-out infinite;
    }
    
    .dot:nth-child(2) { animation-delay: 0.2s; }
    .dot:nth-child(3) { animation-delay: 0.4s; }
    
    .auth-container {
      display: none;
      padding: 40px 20px;
      max-width: 400px;
      margin: 0 auto;
      height: 100vh;
      flex-direction: column;
      justify-content: center;
    }
    
    .auth-header {
      text-align: center;
      margin-bottom: 40px;
    }
    
    .auth-logo {
      width: 80px;
      height: 80px;
      border-radius: 20px;
      background: white;
      display: flex;
      align-items: center;
      justify-content: center;
      margin: 0 auto 24px;
    }
    
    .auth-logo-text {
      font-size: 40px;
      font-weight: bold;
      color: black;
      font-family: serif;
    }
    
    .auth-title {
      font-size: 28px;
      font-weight: 600;
      margin-bottom: 8px;
    }
    
    .auth-subtitle {
      font-size: 16px;
      opacity: 0.7;
    }
    
    .form-group {
      margin-bottom: 20px;
    }
    
    .form-label {
      display: block;
      font-size: 14px;
      font-weight: 500;
      margin-bottom: 8px;
      opacity: 0.9;
    }
    
    .form-input {
      width: 100%;
      padding: 16px;
      border: 1px solid #333;
      border-radius: 12px;
      background: rgba(255,255,255,0.1);
      color: white;
      font-size: 16px;
      backdrop-filter: blur(10px);
    }
    
    .form-input:focus {
      outline: none;
      border-color: #ff69b4;
      box-shadow: 0 0 0 2px rgba(255,105,180,0.2);
    }
    
    .form-input::placeholder {
      color: rgba(255,255,255,0.5);
    }
    
    .auth-button {
      width: 100%;
      padding: 16px;
      border: none;
      border-radius: 12px;
      background: linear-gradient(135deg, #ff69b4 0%, #ff1493 100%);
      color: white;
      font-size: 16px;
      font-weight: 600;
      cursor: pointer;
      margin-bottom: 16px;
      transition: transform 0.2s ease;
    }
    
    .auth-button:hover {
      transform: translateY(-2px);
    }
    
    .auth-button:disabled {
      opacity: 0.5;
      cursor: not-allowed;
      transform: none;
    }
    
    .auth-toggle {
      text-align: center;
      margin-top: 20px;
    }
    
    .auth-toggle button {
      background: none;
      border: none;
      color: #ff69b4;
      font-size: 14px;
      cursor: pointer;
      text-decoration: underline;
    }
    
    .error-message {
      background: rgba(255,0,0,0.1);
      border: 1px solid rgba(255,0,0,0.3);
      color: #ff6b6b;
      padding: 12px;
      border-radius: 8px;
      margin-bottom: 20px;
      font-size: 14px;
    }
    
    @keyframes fadeIn {
      from { opacity: 0; }
      to { opacity: 1; }
    }
    
    @keyframes logoScale {
      from { transform: scale(1); }
      to { transform: scale(1.05); }
    }
    
    @keyframes dotPulse {
      0%, 80%, 100% { opacity: 0.3; }
      40% { opacity: 1; }
    }
    
    .show {
      display: flex !important;
    }
    
    .hide {
      display: none !important;
    }
  </style>
</head>
<body>
  <!-- Loading Screen -->
  <div id="loadingScreen" class="loading-container">
    <div class="logo">
      <div class="logo-text">B</div>
    </div>
    <div class="brand-name">BESMI</div>
    <div class="tagline">The only system built for lash artists of any level</div>
    <div class="loading-dots">
      <div class="dot"></div>
      <div class="dot"></div>
      <div class="dot"></div>
    </div>
  </div>

  <!-- Authentication Screen -->
  <div id="authScreen" class="auth-container">
    <div class="auth-header">
      <div class="auth-logo">
        <div class="auth-logo-text">B</div>
      </div>
      <div class="auth-title">Welcome to Besmi</div>
      <div class="auth-subtitle">Sign in to your lash artist platform</div>
    </div>

    <form id="authForm" class="auth-form">
      <div id="errorMessage" class="error-message hide"></div>
      
      <div class="form-group">
        <label class="form-label" for="email">Email</label>
        <input 
          type="email" 
          id="email" 
          class="form-input" 
          placeholder="Enter your email"
          required
        />
      </div>

      <div class="form-group">
        <label class="form-label" for="password">Password</label>
        <input 
          type="password" 
          id="password" 
          class="form-input" 
          placeholder="Enter your password"
          required
        />
      </div>

      <button type="submit" id="submitButton" class="auth-button">
        Sign In
      </button>

      <div class="auth-toggle">
        <span id="toggleText">Don't have an account?</span>
        <button type="button" id="toggleMode">Sign Up</button>
      </div>
    </form>
  </div>

  <script>
    let isSignUp = false;
    
    // Show auth screen after loading
    setTimeout(() => {
      document.getElementById('loadingScreen').classList.add('hide');
      document.getElementById('authScreen').classList.add('show');
    }, 3000);

    // Toggle between sign in/sign up
    document.getElementById('toggleMode').addEventListener('click', () => {
      isSignUp = !isSignUp;
      const submitButton = document.getElementById('submitButton');
      const toggleText = document.getElementById('toggleText');
      const toggleMode = document.getElementById('toggleMode');
      
      if (isSignUp) {
        submitButton.textContent = 'Create Account';
        toggleText.textContent = 'Already have an account?';
        toggleMode.textContent = 'Sign In';
      } else {
        submitButton.textContent = 'Sign In';
        toggleText.textContent = "Don't have an account?";
        toggleMode.textContent = 'Sign Up';
      }
    });

    // Handle form submission
    document.getElementById('authForm').addEventListener('submit', async (e) => {
      e.preventDefault();
      
      const email = document.getElementById('email').value;
      const password = document.getElementById('password').value;
      const submitButton = document.getElementById('submitButton');
      const errorMessage = document.getElementById('errorMessage');
      
      // Reset error state
      errorMessage.classList.add('hide');
      submitButton.disabled = true;
      submitButton.textContent = 'Signing in...';
      
      try {
        const endpoint = isSignUp ? '/api/auth/signup' : '/api/auth/signin';
        const response = await fetch(`https://besmi.com${endpoint}`, {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          credentials: 'include',
          body: JSON.stringify({ email, password }),
        });

        if (response.ok) {
          // Success - redirect to main platform
          window.location.href = 'https://besmi.com/dashboard';
        } else {
          const error = await response.json();
          throw new Error(error.message || 'Authentication failed');
        }
      } catch (error) {
        errorMessage.textContent = error.message;
        errorMessage.classList.remove('hide');
        submitButton.disabled = false;
        submitButton.textContent = isSignUp ? 'Create Account' : 'Sign In';
      }
    });

    // Auto-focus email field when auth screen appears
    setTimeout(() => {
      document.getElementById('email').focus();
    }, 3100);
  </script>
</body>
</html>
```

### 3. capacitor.config.ts

```typescript
import { CapacitorConfig } from '@capacitor/cli';

const config: CapacitorConfig = {
  appId: 'com.besmi.lashbooking',
  appName: 'Besmi',
  webDir: '.',
  server: {
    androidScheme: 'https'
  },
  android: {
    allowMixedContent: true,
    webContentsDebuggingEnabled: false
  },
  plugins: {
    SplashScreen: {
      launchShowDuration: 1000,
      backgroundColor: "#000000",
      showSpinner: false,
      androidSplashResourceName: "splash",
      splashFullScreen: true,
      splashImmersive: true
    },
    StatusBar: {
      style: 'dark',
      backgroundColor: '#000000'
    },
    PushNotifications: {
      presentationOptions: ["badge", "sound", "alert"]
    }
  }
};

export default config;
```

### 4. .github/workflows/build-android.yml

```yaml
name: Build Besmi Native Android App

on:
  workflow_dispatch:

jobs:
  build-android:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
    
    - name: Setup Java JDK
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'
    
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
    
    - name: Install Dependencies
      run: |
        npm install
        npm install -g @capacitor/cli
        npm install -D typescript
    
    - name: Add Android Platform
      run: npx cap add android
    
    - name: Sync Capacitor
      run: npx cap sync android
    
    - name: Build Android APK
      run: |
        cd android
        ./gradlew assembleDebug
    
    - name: Upload APK Artifact
      uses: actions/upload-artifact@v4
      with:
        name: besmi-native-android-app
        path: android/app/build/outputs/apk/debug/app-debug.apk
        retention-days: 30
```
